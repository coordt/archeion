# Generated by Django 4.1.5 on 2023-02-18 23:30
from typing import List

import django.db.models.deletion
import django_extensions.db.fields
import shortuuid.django_fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies: List[str] = []

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    shortuuid.django_fields.ShortUUIDField(
                        alphabet=None,
                        editable=False,
                        length=22,
                        max_length=22,
                        prefix="",
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="The tag", max_length=200, verbose_name="name"),
                ),
                (
                    "slug",
                    django_extensions.db.fields.AutoSlugField(
                        blank=True,
                        editable=False,
                        max_length=200,
                        populate_from="name",
                        verbose_name="slug",
                    ),
                ),
                (
                    "enabled",
                    models.BooleanField(
                        default=True,
                        help_text="If False, it will remove current associations and will not allow new associations.",
                        verbose_name="enabled",
                    ),
                ),
                (
                    "substitute",
                    models.ForeignKey(
                        blank=True,
                        help_text=(
                            "Tag to use instead of this one. Moves current associations to the substitute tag "
                            "and new association attempts are automatically swapped."
                        ),
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="index.tag",
                        verbose_name="substitute",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Link",
            fields=[
                (
                    "id",
                    shortuuid.django_fields.ShortUUIDField(
                        alphabet=None,
                        editable=False,
                        length=22,
                        max_length=22,
                        prefix="",
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                (
                    "url",
                    models.URLField(help_text="The URL to archive.", verbose_name="url"),
                ),
                (
                    "parsed_url",
                    models.JSONField(
                        help_text="The URL parsed into its components.",
                        verbose_name="parsed url",
                    ),
                ),
                (
                    "archive_path",
                    models.CharField(
                        blank=True,
                        help_text="The path relative to the archive root to store artifacts.",
                        max_length=255,
                        null=True,
                        verbose_name="archive path",
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        blank=True,
                        help_text="The content type of the URL.",
                        max_length=100,
                        null=True,
                        verbose_name="content type",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="The title of the linked resource.",
                        max_length=255,
                        null=True,
                        verbose_name="title",
                    ),
                ),
                (
                    "favicon_url",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="The URL to the site's favicon",
                        max_length=200,
                        null=True,
                        verbose_name="favicon url",
                    ),
                ),
                (
                    "ld_type",
                    models.CharField(
                        blank=True,
                        help_text="The Linked Data type from Schema.org",
                        max_length=200,
                        null=True,
                        verbose_name="Linked data type",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Metadata ",
                        verbose_name="metadata",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time this tag was created.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time this tag was last updated.",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        help_text="Tags applied to the link.",
                        related_name="links",
                        to="index.tag",
                        verbose_name="tags",
                    ),
                ),
            ],
            options={
                "verbose_name": "Link",
                "verbose_name_plural": "Links",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="Artifact",
            fields=[
                (
                    "id",
                    shortuuid.django_fields.ShortUUIDField(
                        alphabet=None,
                        editable=False,
                        length=22,
                        max_length=22,
                        prefix="",
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                (
                    "plugin_name",
                    models.CharField(
                        help_text="The name of the plugin used generate this artifact.",
                        max_length=32,
                        verbose_name="plugin name",
                    ),
                ),
                (
                    "output_path",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="The path, relative to the link's archive_path, to the archived result.",
                        max_length=200,
                        null=True,
                        verbose_name="output path",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        default="pending",
                        help_text="The status of the archive process.",
                        max_length=32,
                        verbose_name="status",
                    ),
                ),
                (
                    "start_ts",
                    models.DateTimeField(
                        blank=True,
                        help_text="The start time of the archive process.",
                        null=True,
                        verbose_name="start timestamp",
                    ),
                ),
                (
                    "end_ts",
                    models.DateTimeField(
                        blank=True,
                        help_text="The end time of the archive process.",
                        null=True,
                        verbose_name="end timestamp",
                    ),
                ),
                (
                    "link",
                    models.ForeignKey(
                        help_text="The link used to archive this artifact.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="artifacts",
                        to="index.link",
                        verbose_name="link",
                    ),
                ),
            ],
            options={
                "verbose_name": "Artifact",
                "verbose_name_plural": "Artifacts",
                "get_latest_by": "start_ts",
                "order_with_respect_to": "link",
            },
        ),
        migrations.AddConstraint(
            model_name="artifact",
            constraint=models.UniqueConstraint(fields=("link", "plugin_name"), name="unique_link_plugin_name"),
        ),
    ]
